{"version":3,"sources":["src/app.ts","src/environment.ts","src/main.ts","src/resources/index.ts","src/app/api/chart.ts","src/app/api/coin.ts","src/app/api/coinIdentifierList.ts","src/app/api/wordpress.ts","src/app/views/buyandcompare.ts","src/app/views/overview.ts","C:/Projects/Kripto/kripto/src/app/api/coins/bitcoin.js","C:/Projects/Kripto/kripto/src/app/api/coins/litecoin.js","C:/Projects/Kripto/kripto/src/app/api/coins/monero.js","src/app/api/websites/websiteCoinValue.ts","src/app/views/coinoverview/coinoverview.ts","C:/Projects/Kripto/kripto/src/app/views/news/article.js","src/app/views/news/news.ts","C:/Projects/Kripto/kripto/src/app/api/websites/anycoindirect/anycoindirect.js","C:/Projects/Kripto/kripto/src/app/api/websites/bitonic/bitonic.js","src/app/api/websites/bitrush/bitrush.ts","src/app/api/websites/coinbase/coinbase.ts","C:/Projects/Kripto/kripto/src/app/api/websites/litebit/litebit.js"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { inject } from \"aurelia-framework\";\r\nimport { Router } from \"aurelia-router\";\r\nimport { CoinIdentifierList } from \"app/api/coinIdentifierList\";\r\n\r\n@inject(Router, CoinIdentifierList)\r\nexport class App {\r\n  constructor(private router: Router,\r\n    public coinIdentifierList: CoinIdentifierList) {\r\n  }\r\n  configureRouter(config, router) {\r\n\r\n    config.title = 'Aurelia';\r\n    config.options.pushState = true;\r\n    config.options.root = \"/\";\r\n    config.map([\r\n      { route: '',  name: 'overview', moduleId: 'app/views/overview'},\r\n      { route: '/:id', name: 'article', moduleId: 'app/views/overview' }\r\n    ]);\r\n    this.router = router;\r\n  }  \r\n}\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import {Aurelia} from 'aurelia-framework'\r\nimport environment from './environment';\r\n\r\nexport function configure(aurelia: Aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources')\r\n    .plugin('aurelia-chart');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","import {FrameworkConfiguration} from 'aurelia-framework';\r\n\r\nexport function configure(config: FrameworkConfiguration) {\r\n  //config.globalResources([]);\r\n}\r\n","import { inject } from \"aurelia-framework\";\r\nimport { HttpClient } from \"aurelia-fetch-client\";\r\nimport { CoinIdentifierList } from \"app/api/coinIdentifierList\" \r\n\r\n@inject(HttpClient, CoinIdentifierList)\r\nexport class ChartApi {\r\n    constructor(private http: HttpClient, public coinIdentifierList: CoinIdentifierList ) {\r\n        this.coinIdentifierList = coinIdentifierList;\r\n    }\r\n    \r\n\r\n\r\n    public async getAllChartData() {\r\n       \r\n        let chartData = new ChartData();\r\n        let responses = await this.getAllRepsonses();       \r\n\r\n        this.getChartDataLabels(responses, chartData);\r\n        this.getDataSets(responses, chartData);\r\n        debugger;\r\n        return chartData;\r\n        \r\n    }\r\n\r\n    private async getAllRepsonses() {\r\n         let responses = new Array<[string, Response]>();\r\n         for (let identifier of this.coinIdentifierList.coinIdentifiers ) {\r\n            \r\n            if(identifier.code != \"BTC\") {\r\n            let response = await this.http.fetch(\"https://min-api.cryptocompare.com/data/histohour?fsym=\"+ identifier.code +\"&tsym=EUR&limit=24&e=CCCAGG\");        \r\n            \r\n            let json = await response.json() as Response;          \r\n            responses.push([identifier.name, json]);            \r\n            }\r\n        };\r\n        return responses;\r\n    }\r\n\r\n    private getChartDataLabels(responses: Array<[string, Response]>, chartData: ChartData) {\r\n        if (responses.length > 0) {\r\n            responses[0][1].Data.forEach(item => {            \r\n            chartData.labels.push(this.getTimeFromUnixTime(item.time));\r\n            })    \r\n        }      \r\n    }\r\n\r\n    private getDataSets(responses: Array<[string, Response]>, chartData: ChartData) {\r\n        responses.forEach(response => {\r\n            let dataset =this.getDataSet(response[0], response[1])\r\n            chartData.datasets.push(dataset);\r\n        })\r\n    }\r\n\r\n\r\n    private getDataSet(label: string, response: Response) {\r\n        \r\n        let dataset = new DataSet;\r\n        dataset.label = label;\r\n        \r\n        response.Data.forEach(item => {\r\n            dataset.data.push(item.high);        \r\n        });                \r\n        return dataset;\r\n    }\r\n\r\n    private getTimeFromUnixTime(unixTime) {\r\n        var date = new Date(unixTime*1000);\r\n        // Hours part from the timestamp\r\n        var hours = date.getHours();\r\n        // Minutes part from the timestamp\r\n        var minutes = \"0\" + date.getMinutes();\r\n        // Seconds part from the timestamp\r\n        //var seconds = \"0\" + date.getSeconds();\r\n        return hours + ':' + minutes.substr(-2);\r\n    }\r\n\r\n}\r\n\r\nexport class ChartData {    \r\n    public labels : Array<string>\r\n    public datasets: Array<DataSet>    \r\n    constructor() {\r\n        this.labels = new Array<string>();\r\n        this.datasets = new Array<DataSet>();\r\n    }\r\n    \r\n    \r\n}\r\n\r\nexport class DataSet {\r\n    constructor() {\r\n        this.data = new Array<number>();\r\n    }\r\n    \r\n     public label: string;\r\n     public fillColor: string = \"rgba(151,187,205,0.2)\";          \r\n     public strokeColor: string = \"rgba(151,187,205,1)\";         \r\n     public pointColor: string = \"rgba(151,187,205,1)\";          \r\n     public pointStrokeColor: string = \"#fff\";    \r\n     public pointHighlightFill: string = \"#fff\";  \r\n     public pointHighlightStroke: string = \"rgba(151,187,205,1)\";\r\n    public data: number[]; \r\n}\r\n\r\nexport class Response {\r\n    Response: string;\r\n        Type: number;\r\n        Aggregated: boolean;\r\n        Data: Datum[];\r\n        TimeTo: number;\r\n        TimeFrom: number;\r\n        FirstValueInArray: boolean;     \r\n}\r\n\r\nexport interface Datum {\r\n        time: number;\r\n        close: number;\r\n        high: number;\r\n        low: number;\r\n        open: number;\r\n        volumefrom: number;\r\n        volumeto: number;\r\n    }\r\n\r\n","import { inject } from \"aurelia-framework\";\r\nimport { HttpClient } from \"aurelia-fetch-client\";\r\nimport { CoinIdentifier } from \"app/api/coinIdentifierList\" \r\n@inject(HttpClient)\r\nexport class CoinApi {\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    private rootUrl: string = \"https://min-api.cryptocompare.com/data/pricemultifull?\"\r\n    public async getCoins(valuta: string, coins: Array<CoinIdentifier>) {\r\n        let coinsQuery = await this.getCoinsQueryString(coins);\r\n        let valutaQuery = \"&tsyms=\" + valuta;\r\n        let response = await this.http.fetch(this.rootUrl + coinsQuery + valutaQuery);\r\n        let json = await response.json()\r\n\r\n        let parsedCoins = new Array<CoinTableRow>();\r\n        coins.forEach(c => {\r\n            let result = json.DISPLAY[c.code][valuta]            \r\n            let parsedCoin = new CoinTableRow(c, result.PRICE, result.CHANGEPCT24HOUR, c.imageUrl);\r\n            parsedCoins.push(parsedCoin);\r\n        })\r\n        return parsedCoins;\r\n    }\r\n\r\n    private getCoinsQueryString(coins: Array<CoinIdentifier>) {\r\n        let queryString = \"fsyms=\";\r\n        let first = true;\r\n        coins.forEach(coin => {\r\n            if(first)\r\n            {\r\n                queryString += coin.code;\r\n                first = false;\r\n            }\r\n            else{\r\n                queryString += \",\" +coin.code;\r\n            }\r\n            \r\n        });\r\n        return queryString;\r\n    }\r\n}\r\n\r\nexport class CoinTableRow {\r\n    public active: boolean = false;\r\n    constructor(\r\n    public identifier: CoinIdentifier,    \r\n    public price: string,\r\n    public percentChange: number,\r\n    public imageUrl: string\r\n    ){}\r\n}","\"use strict\";\r\n\r\nexport class CoinIdentifierList {\r\n    public coinIdentifiers: Array<CoinIdentifier> = new Array<CoinIdentifier>();\r\n    private bitcoin = new CoinIdentifier(\"Bitcoin\", \"BTC\", \"http://www.cryptocompare.com/media/19633/btc.png\");\r\n    private ethereum = new CoinIdentifier(\"Ethereum\", \"ETH\", \"https://www.cryptocompare.com/media/20646/eth.png\");\r\n    private litecoin = new CoinIdentifier(\"Litecoin\", \"LTC\", \"https://www.cryptocompare.com/media/19782/litecoin-logo.png\");\r\n    private digitalCash = new CoinIdentifier(\"DigitalCash\", \"DASH\", \"https://www.cryptocompare.com/media/20626/dash.png\");\r\n    private monero = new CoinIdentifier(\"Monero\", \"XMR\", \"https://www.cryptocompare.com/media/19969/xmr.png\");\r\n    constructor() {\r\n        this.coinIdentifiers = [this.bitcoin, this.ethereum, this.litecoin, this.digitalCash, this.monero];\r\n    }\r\n\r\n    public selectByCoinCode(coinCode: string) {\r\n        this.coinIdentifiers.forEach(identifier => {\r\n            if (identifier.code === coinCode) {\r\n                identifier.active = true;\r\n            }\r\n            else {\r\n                identifier.active = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    public selectByCoinName(coinName: string) {\r\n        this.coinIdentifiers.forEach(identifier => {\r\n            if (identifier.name === coinName) {\r\n                identifier.active = true;\r\n            }\r\n            else {\r\n                identifier.active = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    public resetActiveCoin() {\r\n        this.coinIdentifiers.forEach(identifier => {\r\n            identifier.active = false;\r\n        });\r\n    }\r\n}\r\n\r\nexport class CoinIdentifier {\r\n    public active: boolean\r\n    constructor(public name: string,\r\n        public code: string,\r\n        public imageUrl: string,\r\n    ) { }\r\n}\r\n\r\n","import { inject } from \"aurelia-framework\";\r\nimport { HttpClient } from \"aurelia-fetch-client\";\r\n\r\n@inject(HttpClient)\r\nexport class WordPressApi {\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    private wordpressRoot: string = \"http://www.jdragt.com/Kripto/wp-json/wp/v2/\" \r\n\r\n    public async getPosts() {\r\n        let response = await this.http.fetch(this.wordpressRoot + \"posts?_embed\");\r\n        let posts = await response.json()\r\n        return this.parseResponseToWordpressPost(posts)\r\n    }\r\n\r\n    public async getPostsByCoin(categoryName: string)\r\n    {\r\n        let categoryId = await this.getCategoryCode(categoryName);\r\n        let response = await this.http.fetch(this.wordpressRoot +\"posts?_embed&categories=\" + categoryId) ;\r\n        let posts = await response.json();\r\n        return this.parseResponseToWordpressPost(posts)\r\n    }\r\n\r\n    public async getPostById(id: string) {\r\n        let response = await this.http.fetch(this.wordpressRoot +\"posts/\" + id + \"?_embed\");\r\n        let post = await response.json();\r\n        let categoryName = post._embedded[\"wp:term\"][0][0].name;\r\n        return new WordPressPost(post.id, post.title.rendered, post.content.rendered, post._embedded[\"wp:featuredmedia\"][0].source_url, categoryName);\r\n    }\r\n\r\n    private parseResponseToWordpressPost(posts){\r\n        let parsedPosts = new Array<WordPressPost>();\r\n        posts.forEach(post => {\r\n            let categoryName = post._embedded[\"wp:term\"][0][0].name;\r\n            parsedPosts.push(new WordPressPost(post.id, post.title.rendered, post.content.rendered, post._embedded[\"wp:featuredmedia\"][0].source_url,name))\r\n        });\r\n        return parsedPosts;\r\n    }\r\n\r\n    private async getCategoryCode(coinName:string)\r\n    {\r\n        let response = await this.http.fetch(this.wordpressRoot + \"categories?slug=\" + coinName.toLowerCase());\r\n        let category = await response.json();\r\n        return category[0].id;\r\n    }\r\n}\r\n\r\nexport class WordPressPost {\r\nconstructor(\r\n    public id: string,\r\n    public title :string,\r\n    public content: string,\r\n    public featuredImageSrc: string,\r\n    public categoryName: string ) {}\r\n\r\n}","import { inject } from \"aurelia-framework\";\r\n//import { AnyCoinDirectApi } from \"app/api/websites/anycoindirect/anycoindirect\";\r\nimport { CoinBaseApi } from \"app/api/websites/coinbase/coinbase\";\r\nimport { WebsiteCoinValue } from \"app/api/websites/websiteCoinValue\";\r\n// import { BitonicApi } from \"app/api/websites/bitonic/bitonic\"\r\nimport { BitRushApi } from \"app/api/websites/bitrush/bitrush\";\r\n\r\n@inject(BitRushApi, CoinBaseApi)\r\nexport class BuyAndCompare {\r\n    \r\n    constructor(private bitrushApi: BitRushApi, private coinBaseApi: CoinBaseApi) {}\r\n    private coins: Array<WebsiteCoinValue> = new Array<WebsiteCoinValue>();\r\n    public async activate()\r\n    {\r\n        \r\n        let url = \"https://api.bitrush.nl/v1/products\";\r\n        \r\n        this.coins.push( await this.bitrushApi.getBitcoinPrice())\r\n        this.coins.push( await this.bitrushApi.getLiteCoinPrice())\r\n        this.coins.push( await this.bitrushApi.getEthereumPrice())\r\n        this.coins.push( await this.bitrushApi.getDigitalCashPrice())\r\n        this.coins.push( await this.coinBaseApi.getBitcoinPrice())\r\n        this.coins.push( await this.coinBaseApi.getLiteCoinPrice())\r\n        this.coins.push( await this.coinBaseApi.getEthereumPrice())\r\n        \r\n        await this.coinBaseApi.getBitcoinPrice();\r\n        \r\n\r\n        // this.coins = new Array<WebsiteCoinValue>();\r\n        // this.coins.push(await this.bitonicApi.getIdealPrice(\"btc\"));     \r\n        // this.coins.push(await this.btcdirectApi.getIdealPrice(\"btc\"));\r\n        // this.coins.push(await this.btcdirectApi.getIdealPrice(\"eth\"));\r\n        // this.coins.push(await this.btcdirectApi.getIdealPrice(\"ltc\"));\r\n        // this.coins.push(await this.btcdirectApi.getIdealPrice(\"xmr\"));\r\n        // this.coins.push(await this.btcdirectApi.getIdealPrice(\"dash\"));\r\n    }\r\n}\r\n","\"use strict\";\r\nimport { inject, observable } from \"aurelia-framework\";\r\nimport { Router } from \"aurelia-router\"\r\nimport { CoinIdentifier, CoinIdentifierList } from \"app/api/coinIdentifierList\";\r\n\r\n@inject(CoinIdentifierList,Router)\r\nexport class Overview {\r\n    constructor(public coinIdentifierList: CoinIdentifierList, public router: Router) {\r\n\r\n    }\r\n\r\n    @observable public activeCoinIdentifier: CoinIdentifier;\r\n    public articleId: string;\r\n\r\n    public async activate(params) {\r\n        \r\n        this.articleId = params.id;\r\n\r\n    }\r\n\r\n    public changeActiveCoin(coinIdentifier: CoinIdentifier) {\r\n        this.activeCoinIdentifier = coinIdentifier;\r\n    }\r\n\r\n    public activeCoinIdentifierChanged(newValue, oldValue) {\r\n        if (newValue) {\r\n\r\n            this.coinIdentifierList.coinIdentifiers.forEach(identifier => {\r\n                if (identifier.code === newValue.code) {\r\n                    identifier.active = true;\r\n                }\r\n                else {\r\n                    identifier.active = false;\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    public async resetActiveCoin() {\r\n        this.coinIdentifierList.coinIdentifiers.forEach(identifier => {\r\n            identifier.active = false;\r\n        });\r\n\r\n        this.activeCoinIdentifier = undefined;\r\n        this.router.navigateToRoute(\"overview\");\r\n    }\r\n}\r\n",null,null,null,"export class WebsiteCoinValue {\r\n    constructor(    \r\n    public websiteName: string,\r\n    public coinName: string,\r\n    public coinPrice: number\r\n    ){}\r\n}","import { inject, bindable } from \"aurelia-framework\";\r\nimport { Router } from \"aurelia-router\";\r\nimport { CoinIdentifier, CoinIdentifierList } from \"app/api/coinIdentifierList\";\r\nimport { CoinApi, CoinTableRow } from \"app/api/coin\";\r\nimport { ChartApi } from \"app/api/chart\";\r\n\r\n@inject(CoinApi, CoinIdentifierList, Router, ChartApi)\r\nexport class CoinOverview {    \r\n    public myData;\r\n    @bindable activeCoinIdentifier: CoinIdentifier;\r\n    public coinTableRows: Array<CoinTableRow>;\r\n\r\n    constructor(private currencyApi: CoinApi,\r\n                public coinIdentifierList: CoinIdentifierList,\r\n                private router: Router,\r\n                public chartApi: ChartApi) {\r\n        \r\n    }\r\n\r\n    public async attached() {\r\n        this.coinTableRows = await this.currencyApi.getCoins(\"EUR\", this.coinIdentifierList.coinIdentifiers);\r\n        this.myData = await this.chartApi.getAllChartData();\r\n    }\r\n\r\n    public changeActiveCoinCategory(identifier: CoinIdentifier) {\r\n        this.activeCoinIdentifier = identifier;\r\n        this.router.navigateToRoute(\"overview\");\r\n    }\r\n\r\n    public activeCoinIdentifierChanged(newValue, oldValue) {\r\n        if (newValue) {     \r\n            this.coinTableRows.forEach(coinTableRow => {\r\n                if (coinTableRow.identifier === newValue) {\r\n                    coinTableRow.active = true;\r\n                }\r\n                else {\r\n                    coinTableRow.active = false;\r\n                }\r\n            })\r\n        }\r\n    }    \r\n\r\n    // https://widgets.cryptocompare.com/serve/v2/coin/chart?fsym=BTC&tsym=EUR&period=1D&app=jdragt.com\r\n}\r\n\r\n\r\n",null,"import {Router} from \"aurelia-router\";\r\nimport { customElement, bindable, inject } from 'aurelia-framework';\r\nimport { CoinIdentifierList, CoinIdentifier} from \"app/api/coinIdentifierList\";\r\nimport { WordPressApi, WordPressPost } from \"app/api/wordpress\";\r\n\r\n@inject(WordPressApi, CoinIdentifierList, Router)\r\nexport class News {\r\n    @bindable public articleId: string = \"\";\r\n    @bindable public activeCoinIdentifier: CoinIdentifier;    \r\n    private posts: Array<WordPressPost> = new Array<WordPressPost>();\r\n    private selectedArticle: WordPressPost;\r\n    constructor(private wordpressApi: WordPressApi, public coinIdentifierList: CoinIdentifierList, public router: Router) {\r\n       \r\n    }\r\n\r\n    public async attached() {        \r\n        if (this.articleId) {            \r\n            this.selectedArticle = await this.wordpressApi.getPostById(this.articleId);\r\n            this.setActiveCoinIdentifierByCategoryName(this.selectedArticle.categoryName);\r\n        }\r\n        else {\r\n            this.loadPosts();\r\n        }\r\n    }\r\n\r\n    private async loadPosts() {\r\n        \r\n        if (this.activeCoinIdentifier) {            \r\n            this.posts = await this.wordpressApi.getPostsByCoin(this.activeCoinIdentifier.name);\r\n        } else {\r\n            this.posts = await this.wordpressApi.getPosts();\r\n        }\r\n    }\r\n\r\n    private setActiveCoinIdentifierByCategoryName(categoryName: string) {        \r\n        this.coinIdentifierList.coinIdentifiers.forEach( identifier => {\r\n        if (identifier.name == categoryName) this.activeCoinIdentifier = identifier;\r\n        })\r\n    }\r\n\r\n    private activeCoinIdentifierChanged(newValue, oldValue) {\r\n        this.loadPosts();\r\n    }\r\n\r\n    public async selectArticle(id) {        \r\n        this.router.navigateToRoute(\"article\",{\"id\": id } )\r\n    }\r\n\r\n    public async articleIdChanged(newValue, oldValue) {\r\n        if(newValue) {\r\n            debugger;\r\n            this.selectedArticle = await this.wordpressApi.getPostById(newValue);   \r\n        } else {\r\n            this.selectedArticle = undefined;\r\n        }        \r\n    }\r\n\r\n    public closeSelectedArticle() {\r\n        this.selectedArticle = undefined;\r\n        this.router.navigateToRoute(\"overview\");\r\n    }\r\n}",null,null,"import { inject } from \"aurelia-framework\";\r\nimport { HttpClient } from \"aurelia-fetch-client\";\r\nimport { WebsiteCoinValue } from \"app/api/websites/websiteCoinValue\";\r\n\r\n@inject(HttpClient)\r\nexport class BitRushApi {\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    public root = \"https://api.bitrush.nl/v1/products\";\r\n\r\n    \r\n    private async getPrice(coinCode: string) {\r\n            let response = await this.http.fetch(this.root + \"/EUR-\" + coinCode );\r\n            let json = await response.json() as BitRushCoin;         \r\n            return new WebsiteCoinValue(\"Bitrush\", json.coin_currency, json.ask);\r\n    }\r\n    \r\n    public async getBitcoinPrice() {\r\n        let coin = await this.getPrice(\"XBT\");\r\n        coin.coinName = \"BTC\";\r\n        return coin;\r\n    }\r\n\r\n    public async getLiteCoinPrice() {\r\n        return await this.getPrice(\"LTC\");\r\n    }\r\n\r\n    public async getDigitalCashPrice() {\r\n        return await this.getPrice(\"DASH\");\r\n    }\r\n\r\n    public async getEthereumPrice() {\r\n        return await this.getPrice(\"ETH\");\r\n    }\r\n}\r\n\r\nclass BitRushCoin \r\n{\r\n    public id: string;\r\n    public fiat_currency: string;\r\n    public coin_currency: string;\r\n    public fiat_quantity: number;\r\n    public coin_quantity: number;\r\n    public ask: number;\r\n    public bid: number;\r\n}","import { inject } from \"aurelia-framework\";\r\nimport { HttpClient } from \"aurelia-fetch-client\";\r\nimport { WebsiteCoinValue } from \"app/api/websites/websiteCoinValue\";\r\nimport * as fetchJsonp from \"fetch-jsonp\";\r\n\r\n@inject(HttpClient)\r\nexport class CoinBaseApi {\r\n    constructor(private http: HttpClient) { //TODO use npm package\r\n\r\n    }\r\n\r\n    public root = \"https://api.coinbase.com/v2/exchange-rates?currency=\";\r\n\r\n    private async getPrice(coin: string)\r\n    {\r\n        let response = await this.http.fetch(this.root + coin);\r\n        var json = await response.json();        \r\n        return new WebsiteCoinValue(\"Coinbase\", coin , json.data.rates[\"EUR\"] )\r\n    }\r\n    \r\n    public async getBitcoinPrice() {\r\n        return await this.getPrice(\"BTC\")        \r\n    }\r\n\r\n    public async getEthereumPrice() {\r\n        return await this.getPrice(\"ETH\")\r\n    }\r\n\r\n    public async getLiteCoinPrice() {\r\n        return await this.getPrice(\"LTC\")\r\n    }\r\n\r\n\r\n\r\n}\r\n",null],"sourceRoot":".."}