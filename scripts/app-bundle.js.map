{"version":3,"sources":["src/app.ts","src/environment.ts","src/main.ts","src/resources/index.ts","src/app/api/coin-information.ts","src/app/api/coin.ts","src/app/api/wordpress.ts","src/app/views/overview.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { inject } from \"aurelia-framework\";\nimport { Router } from \"aurelia-router\";\n\n@inject(Router)\nexport class App {\n  constructor(private router: Router) {\n\n  }\n  configureRouter(config, router) {\n    this.router = router;\n    config.title = 'Aurelia';\n    config.map([\n      { route: [''], name: 'home', moduleId: 'app/views/overview' }\n\n    ]);\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","\"use strict\";\r\n\r\nexport class CoinInformation {\r\n    public bitcoin = new CoinIdentifier(\"Bitcoin\", \"BTC\", \"http://www.cryptocompare.com/media/19633/btc.png\");\r\n    public ethereum = new CoinIdentifier(\"Ethereum\", \"ETH\", \"https://www.cryptocompare.com/media/20646/eth.png\");\r\n    public litecoin = new CoinIdentifier(\"Litecoin\", \"LTC\", \"https://www.cryptocompare.com/media/19782/litecoin-logo.png\");\r\n    public digitalCash = new CoinIdentifier(\"DigitalCash\", \"DASH\", \"https://www.cryptocompare.com/media/20626/dash.png\");\r\n    public monero = new CoinIdentifier(\"Monero\", \"XMR\", \"https://www.cryptocompare.com/media/19969/xmr.png\");\r\n\r\n\r\n    public GetCoinIdentifiers(): Array<CoinIdentifier> {\r\n        return [this.bitcoin, this.ethereum, this.litecoin, this.digitalCash, this.monero]\r\n    }\r\n}\r\n\r\nexport class CoinIdentifier {    \r\n    public active: boolean\r\n    constructor(public name: string,\r\n        public code: string,\r\n        public imageUrl: string,\r\n        ) {}\r\n}\r\n\r\n","import { inject } from \"aurelia-framework\";\r\nimport { HttpClient } from \"aurelia-fetch-client\";\r\nimport { CoinIdentifier } from \"app/api/coin-information\" \r\n@inject(HttpClient)\r\nexport class CoinApi {\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    private rootUrl: string = \"https://min-api.cryptocompare.com/data/pricemultifull?\"\r\n    public async getCoins(valuta: string, coins: Array<CoinIdentifier>) {\r\n        \r\n        let coinsQuery = await this.getCoinsQueryString(coins);\r\n        let valutaQuery = \"&tsyms=\" + valuta;\r\n        let response = await this.http.fetch(this.rootUrl + coinsQuery + valutaQuery);\r\n        let json = await response.json()\r\n\r\n        let parsedCoins = new Array<Coin>();       \r\n        \r\n        coins.forEach(c => {            \r\n            let result = json.DISPLAY[c.code][valuta]\r\n            let parsedCoin = new Coin(c.code, c.name, result.PRICE, result.CHANGEPCT24HOUR, c.imageUrl);\r\n            parsedCoins.push(parsedCoin);\r\n        })\r\n\r\n        return parsedCoins;        \r\n    }\r\n\r\n    private getCoinsQueryString(coins: Array<CoinIdentifier>) {\r\n        let queryString = \"fsyms=\";\r\n        let first = true;\r\n        coins.forEach(coin => {\r\n            if(first)\r\n            {\r\n                queryString += coin.code;\r\n                first = false;\r\n            }\r\n            else{\r\n                queryString += \",\" +coin.code;\r\n            }\r\n            \r\n        });\r\n        return queryString;\r\n    }\r\n}\r\n\r\nexport class Coin {\r\n    constructor(    \r\n    public code: string,\r\n    public name: string,\r\n    public price: string,\r\n    public percentChange: string,\r\n    public imageUrl: string\r\n    ){}\r\n}","import { inject } from \"aurelia-framework\";\r\nimport { HttpClient } from \"aurelia-fetch-client\";\r\n\r\n@inject(HttpClient)\r\nexport class WordPressApi {\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    private wordpressRoot: string = \"http://www.jdragt.com/Kripto/wp-json/wp/v2/\" \r\n\r\n    public async getPosts() {\r\n        let response = await this.http.fetch(this.wordpressRoot + \"posts?_embed\");\r\n        let posts = await response.json()\r\n        return this.parseResponseToWordpressPost(posts)\r\n    }\r\n\r\n    public async getPostsByCoin(categoryName: string)\r\n    {\r\n        let categoryId = await this.getCategoryCode(categoryName);\r\n        let response = await this.http.fetch(this.wordpressRoot +\"posts?_embed&categories=\" + categoryId) ;\r\n        let posts = await response.json();\r\n        return this.parseResponseToWordpressPost(posts)\r\n    }\r\n\r\n    private parseResponseToWordpressPost(posts){\r\n        let parsedPosts = new Array<WordPressPost>();\r\n        posts.forEach(post => {\r\n            parsedPosts.push(new WordPressPost(post.id, post.title.rendered, post.content.rendered, post._embedded[\"wp:featuredmedia\"][0].source_url))\r\n        });\r\n        return parsedPosts;\r\n    }\r\n\r\n    private async getCategoryCode(coinName:string)\r\n    {\r\n        let response = await this.http.fetch(this.wordpressRoot + \"categories?slug=\" + coinName.toLowerCase());\r\n        let category = await response.json();\r\n        return category[0].id;\r\n    }\r\n}\r\n\r\nexport class WordPressPost {\r\nconstructor(\r\n    public id: string,\r\n    public title :string,\r\n    public content: string,\r\n    public featuredImageSrc: string ) {}\r\n\r\n}","\"use strict\";\r\nimport { inject } from \"aurelia-framework\";\r\nimport { WordPressApi, WordPressPost } from \"app/api/wordpress\";\r\nimport { CoinApi, Coin } from \"app/api/coin\";\r\nimport { CoinInformation, CoinIdentifier} from \"app/api/coin-information\"; \r\n\r\n\r\n@inject(WordPressApi, CoinApi, CoinInformation)\r\nexport class Bitcoin {\r\n    constructor(private wordpressApi: WordPressApi, private currencyApi: CoinApi, private identifierApi: CoinInformation) { \r\n\r\n    }\r\n    public posts: Array<WordPressPost>;\r\n    public coins: Array<Coin>;\r\n    public coinIdentifiers: Array<CoinIdentifier>;\r\n\r\n    public async activate() {\r\n                \r\n        await this.loadAllPosts();   \r\n        this.coinIdentifiers = this.identifierApi.GetCoinIdentifiers();\r\n        this.coins = await this.currencyApi.getCoins(\"EUR\", this.coinIdentifiers);        \r\n    }\r\n\r\n    public async changeActiveCoin(code: string, name: string)\r\n    {\r\n        this.posts =  await this.wordpressApi.getPostsByCoin(name);\r\n        this.coinIdentifiers.forEach(identifier => {\r\n            if(identifier.code === code ){\r\n                identifier.active = true;\r\n            }\r\n            else {\r\n                identifier.active = false;\r\n            }\r\n        })\r\n    }\r\n\r\n    public async resetActiveCoin() {\r\n        await this.loadAllPosts();\r\n        this.coinIdentifiers.forEach(identifier => {\r\n            identifier.active = false;\r\n        });\r\n    }\r\n\r\n    public async loadAllPosts(){\r\n        this.posts = await this.wordpressApi.getPosts();\r\n    }\r\n}\r\n"],"sourceRoot":".."}