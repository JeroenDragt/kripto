{"version":3,"sources":["src/app.ts","src/environment.ts","src/main.ts","src/resources/index.ts","src/app/views/buyandcompare.ts","src/app/views/overview.ts","src/app/api/coin-information.ts","src/app/api/coin.ts","src/app/api/wordpress.ts","src/app/views/coinoverview/coinoverview.ts","C:/projects/aurelia/kripto/src/app/views/news/article.js","src/app/views/news/news.ts","C:/projects/aurelia/kripto/src/app/api/coins/bitcoin.js","C:/projects/aurelia/kripto/src/app/api/coins/litecoin.js","C:/projects/aurelia/kripto/src/app/api/coins/monero.js","src/app/api/websites/websiteCoinValue.ts","C:/projects/aurelia/kripto/src/app/api/websites/anycoindirect/anycoindirect.js","C:/projects/aurelia/kripto/src/app/api/websites/bitonic/bitonic.js","src/app/api/websites/bitrush/bitrush.ts","src/app/api/websites/coinbase/coinbase.ts","C:/projects/aurelia/kripto/src/app/api/websites/litebit/litebit.js"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { inject } from \"aurelia-framework\";\nimport { Router } from \"aurelia-router\";\n\n@inject(Router)\nexport class App {\n  constructor(private router: Router) {\n\n  }\n  configureRouter(config, router) {\n    \n    config.title = 'Aurelia';\n    config.options.pushState = true;\n    config.options.root =\"/\";\n    config.map([      \n      { route: ['', '/:id'], name: 'home', moduleId: 'app/views/overview' }\n      \n      \n    ]);\n    this.router = router;\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","import { inject } from \"aurelia-framework\";\r\n//import { AnyCoinDirectApi } from \"app/api/websites/anycoindirect/anycoindirect\";\r\nimport { CoinBaseApi } from \"app/api/websites/coinbase/coinbase\";\r\nimport { WebsiteCoinValue } from \"app/api/websites/websiteCoinValue\";\r\n// import { BitonicApi } from \"app/api/websites/bitonic/bitonic\"\r\nimport { BitRushApi } from \"app/api/websites/bitrush/bitrush\";\r\n\r\n@inject(BitRushApi, CoinBaseApi)\r\nexport class BuyAndCompare {\r\n    \r\n    constructor(private bitrushApi: BitRushApi, private coinBaseApi: CoinBaseApi) {}\r\n    private coins: Array<WebsiteCoinValue> = new Array<WebsiteCoinValue>();\r\n    public async activate()\r\n    {\r\n        \r\n        let url = \"https://api.bitrush.nl/v1/products\";\r\n        \r\n        this.coins.push( await this.bitrushApi.getBitcoinPrice())\r\n        this.coins.push( await this.bitrushApi.getLiteCoinPrice())\r\n        this.coins.push( await this.bitrushApi.getEthereumPrice())\r\n        this.coins.push( await this.bitrushApi.getDigitalCashPrice())\r\n        this.coins.push( await this.coinBaseApi.getBitcoinPrice())\r\n        this.coins.push( await this.coinBaseApi.getLiteCoinPrice())\r\n        this.coins.push( await this.coinBaseApi.getEthereumPrice())\r\n        \r\n        await this.coinBaseApi.getBitcoinPrice();\r\n        \r\n\r\n        // this.coins = new Array<WebsiteCoinValue>();\r\n        // this.coins.push(await this.bitonicApi.getIdealPrice(\"btc\"));     \r\n        // this.coins.push(await this.btcdirectApi.getIdealPrice(\"btc\"));\r\n        // this.coins.push(await this.btcdirectApi.getIdealPrice(\"eth\"));\r\n        // this.coins.push(await this.btcdirectApi.getIdealPrice(\"ltc\"));\r\n        // this.coins.push(await this.btcdirectApi.getIdealPrice(\"xmr\"));\r\n        // this.coins.push(await this.btcdirectApi.getIdealPrice(\"dash\"));\r\n    }\r\n}\r\n","\"use strict\";\r\nimport { inject, observable } from \"aurelia-framework\";\r\nimport { CoinInformation, CoinIdentifier} from \"app/api/coin-information\"; \r\n\r\n\r\n@inject(CoinInformation)\r\nexport class Overview {\r\n    constructor(private identifierApi: CoinInformation) { \r\n\r\n    }\r\n    \r\n    public coinIdentifiers: Array<CoinIdentifier>;\r\n    @observable public activeCoinIdentifier: CoinIdentifier;\r\n    public articleId: string;\r\n\r\n    public async activate(params) {\r\n        this.articleId = params.id;\r\n        this.coinIdentifiers = this.identifierApi.GetCoinIdentifiers();\r\n    }   \r\n\r\n    public changeActiveCoin(coinIdentifier: CoinIdentifier) {\r\n        this.activeCoinIdentifier = coinIdentifier;\r\n    }\r\n\r\n    public activeCoinIdentifierChanged(newValue, oldValue) {\r\n        this.coinIdentifiers.forEach(identifier => {\r\n            if(identifier.code === newValue.code ){\r\n                identifier.active = true;\r\n            }\r\n            else {\r\n                identifier.active = false;\r\n            }\r\n        })\r\n    }\r\n\r\n    public async resetActiveCoin() {\r\n        this.coinIdentifiers.forEach(identifier => {\r\n            identifier.active = false;\r\n        });\r\n    }   \r\n}\r\n","\"use strict\";\r\n\r\nexport class CoinInformation {\r\n    public bitcoin = new CoinIdentifier(\"Bitcoin\", \"BTC\", \"http://www.cryptocompare.com/media/19633/btc.png\");\r\n    public ethereum = new CoinIdentifier(\"Ethereum\", \"ETH\", \"https://www.cryptocompare.com/media/20646/eth.png\");\r\n    public litecoin = new CoinIdentifier(\"Litecoin\", \"LTC\", \"https://www.cryptocompare.com/media/19782/litecoin-logo.png\");\r\n    public digitalCash = new CoinIdentifier(\"DigitalCash\", \"DASH\", \"https://www.cryptocompare.com/media/20626/dash.png\");\r\n    public monero = new CoinIdentifier(\"Monero\", \"XMR\", \"https://www.cryptocompare.com/media/19969/xmr.png\");\r\n\r\n\r\n    public GetCoinIdentifiers(): Array<CoinIdentifier> {\r\n        return [this.bitcoin, this.ethereum, this.litecoin, this.digitalCash, this.monero]\r\n    }\r\n}\r\n\r\nexport class CoinIdentifier { \r\n    public active: boolean\r\n    constructor(public name: string,\r\n        public code: string,\r\n        public imageUrl: string,\r\n        ) {}\r\n}\r\n\r\n","import { inject } from \"aurelia-framework\";\r\nimport { HttpClient } from \"aurelia-fetch-client\";\r\nimport { CoinIdentifier } from \"app/api/coin-information\" \r\n@inject(HttpClient)\r\nexport class CoinApi {\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    private rootUrl: string = \"https://min-api.cryptocompare.com/data/pricemultifull?\"\r\n    public async getCoins(valuta: string, coins: Array<CoinIdentifier>) {\r\n        let coinsQuery = await this.getCoinsQueryString(coins);\r\n        let valutaQuery = \"&tsyms=\" + valuta;\r\n        let response = await this.http.fetch(this.rootUrl + coinsQuery + valutaQuery);\r\n        let json = await response.json()\r\n\r\n        let parsedCoins = new Array<CoinTableRow>();\r\n        coins.forEach(c => {\r\n            let result = json.DISPLAY[c.code][valuta]            \r\n            let parsedCoin = new CoinTableRow(c, result.PRICE, result.CHANGEPCT24HOUR, c.imageUrl);\r\n            parsedCoins.push(parsedCoin);\r\n        })\r\n        return parsedCoins;\r\n    }\r\n\r\n    private getCoinsQueryString(coins: Array<CoinIdentifier>) {\r\n        let queryString = \"fsyms=\";\r\n        let first = true;\r\n        coins.forEach(coin => {\r\n            if(first)\r\n            {\r\n                queryString += coin.code;\r\n                first = false;\r\n            }\r\n            else{\r\n                queryString += \",\" +coin.code;\r\n            }\r\n            \r\n        });\r\n        return queryString;\r\n    }\r\n}\r\n\r\nexport class CoinTableRow {\r\n    public active: boolean = false;\r\n    constructor(\r\n    public identifier: CoinIdentifier,    \r\n    public price: string,\r\n    public percentChange: number,\r\n    public imageUrl: string\r\n    ){}\r\n}","import { inject } from \"aurelia-framework\";\r\nimport { HttpClient } from \"aurelia-fetch-client\";\r\n\r\n@inject(HttpClient)\r\nexport class WordPressApi {\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    private wordpressRoot: string = \"http://www.jdragt.com/Kripto/wp-json/wp/v2/\" \r\n\r\n    public async getPosts() {\r\n        let response = await this.http.fetch(this.wordpressRoot + \"posts?_embed\");\r\n        let posts = await response.json()\r\n        return this.parseResponseToWordpressPost(posts)\r\n    }\r\n\r\n    public async getPostsByCoin(categoryName: string)\r\n    {\r\n        let categoryId = await this.getCategoryCode(categoryName);\r\n        let response = await this.http.fetch(this.wordpressRoot +\"posts?_embed&categories=\" + categoryId) ;\r\n        let posts = await response.json();\r\n        return this.parseResponseToWordpressPost(posts)\r\n    }\r\n\r\n    public async getPostById(id: string) {\r\n        let response = await this.http.fetch(this.wordpressRoot +\"posts/\" + id + \"?_embed\");\r\n        let post = await response.json();\r\n        let categoryName = post._embedded[\"wp:term\"][0][0].name;\r\n        return new WordPressPost(post.id, post.title.rendered, post.content.rendered, post._embedded[\"wp:featuredmedia\"][0].source_url, categoryName);\r\n    }\r\n\r\n    private parseResponseToWordpressPost(posts){\r\n        let parsedPosts = new Array<WordPressPost>();\r\n        posts.forEach(post => {\r\n            let categoryName = post._embedded[\"wp:term\"][0][0].name;\r\n            parsedPosts.push(new WordPressPost(post.id, post.title.rendered, post.content.rendered, post._embedded[\"wp:featuredmedia\"][0].source_url,name))\r\n        });\r\n        return parsedPosts;\r\n    }\r\n\r\n    private async getCategoryCode(coinName:string)\r\n    {\r\n        let response = await this.http.fetch(this.wordpressRoot + \"categories?slug=\" + coinName.toLowerCase());\r\n        let category = await response.json();\r\n        return category[0].id;\r\n    }\r\n}\r\n\r\nexport class WordPressPost {\r\nconstructor(\r\n    public id: string,\r\n    public title :string,\r\n    public content: string,\r\n    public featuredImageSrc: string,\r\n    public categoryName: string ) {}\r\n\r\n}","import { inject, bindable } from \"aurelia-framework\";\r\nimport { CoinIdentifier} from \"app/api/coin-information\";\r\nimport { CoinApi, CoinTableRow } from \"app/api/coin\";\r\n\r\n@inject(CoinApi)\r\nexport class CoinOverview {\r\n    @bindable activeCoinIdentifier: CoinIdentifier;\r\n    @bindable coinIdentifiers: Array<CoinIdentifier>;\r\n    public coinTableRows: Array<CoinTableRow>;\r\n    constructor(private currencyApi: CoinApi) { }\r\n\r\n    public async attached() {\r\n        this.coinTableRows = await this.currencyApi.getCoins(\"EUR\", this.coinIdentifiers);\r\n    }\r\n\r\n    public changeActiveCoinCategory(identifier: CoinIdentifier) {\r\n        debugger;\r\n        this.activeCoinIdentifier = identifier;\r\n    }\r\n\r\n    public activeCoinIdentifierChanged(newValue, oldValue) {\r\n         this.coinTableRows.forEach(coinTableRow => {\r\n            if(coinTableRow.identifier === newValue){\r\n                coinTableRow.active = true;\r\n            }\r\n            else {\r\n                coinTableRow.active = false;\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n",null,"import { customElement, bindable, inject } from 'aurelia-framework';\r\nimport { CoinIdentifier} from \"app/api/coin-information\";\r\nimport { WordPressApi, WordPressPost } from \"app/api/wordpress\";\r\n\r\n@inject(WordPressApi)\r\nexport class News {\r\n    @bindable public articleId: string = \"\";\r\n    @bindable public activeCoinIdentifier: CoinIdentifier;\r\n    @bindable public coinIdentifiers: Array<CoinIdentifier>;\r\n    private posts: Array<WordPressPost> = new Array<WordPressPost>();\r\n    private selectedArticle: WordPressPost;\r\n    constructor(private wordpressApi: WordPressApi) {}\r\n\r\n    public async attached() {\r\n        if (this.articleId) {\r\n            \r\n            this.selectedArticle = await this.wordpressApi.getPostById(this.articleId);\r\n            this.setActiveCoinIdentifierByCategoryName(this.selectedArticle.categoryName);\r\n        }\r\n        else {\r\n            this.loadPosts();\r\n        }\r\n    }\r\n\r\n    private async loadPosts() {\r\n        \r\n        if (this.activeCoinIdentifier) {\r\n            debugger;\r\n            this.posts = await this.wordpressApi.getPostsByCoin(this.activeCoinIdentifier.name);\r\n        } else {\r\n            this.posts = await this.wordpressApi.getPosts();\r\n        }\r\n    }\r\n\r\n    private setActiveCoinIdentifierByCategoryName(categoryName: string) {        \r\n        debugger;\r\n        this.coinIdentifiers.forEach( identifier => {\r\n        if (identifier.name == categoryName) this.activeCoinIdentifier = identifier;\r\n        })\r\n    }\r\n\r\n    private activeCoinIdentifierChanged(newValue, oldValue) {\r\n        this.loadPosts();\r\n    }\r\n}",null,null,null,"export class WebsiteCoinValue {\r\n    constructor(    \r\n    public websiteName: string,\r\n    public coinName: string,\r\n    public coinPrice: number\r\n    ){}\r\n}",null,null,"import { inject } from \"aurelia-framework\";\r\nimport { HttpClient } from \"aurelia-fetch-client\";\r\nimport { WebsiteCoinValue } from \"app/api/websites/websiteCoinValue\";\r\n\r\n@inject(HttpClient)\r\nexport class BitRushApi {\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    public root = \"https://api.bitrush.nl/v1/products\";\r\n\r\n    \r\n    private async getPrice(coinCode: string) {\r\n            let response = await this.http.fetch(this.root + \"/EUR-\" + coinCode );\r\n            let json = await response.json() as BitRushCoin;         \r\n            return new WebsiteCoinValue(\"Bitrush\", json.coin_currency, json.ask);\r\n    }\r\n    \r\n    public async getBitcoinPrice() {\r\n        let coin = await this.getPrice(\"XBT\");\r\n        coin.coinName = \"BTC\";\r\n        return coin;\r\n    }\r\n\r\n    public async getLiteCoinPrice() {\r\n        return await this.getPrice(\"LTC\");\r\n    }\r\n\r\n    public async getDigitalCashPrice() {\r\n        return await this.getPrice(\"DASH\");\r\n    }\r\n\r\n    public async getEthereumPrice() {\r\n        return await this.getPrice(\"ETH\");\r\n    }\r\n}\r\n\r\nclass BitRushCoin \r\n{\r\n    public id: string;\r\n    public fiat_currency: string;\r\n    public coin_currency: string;\r\n    public fiat_quantity: number;\r\n    public coin_quantity: number;\r\n    public ask: number;\r\n    public bid: number;\r\n}","import { inject } from \"aurelia-framework\";\r\nimport { HttpClient } from \"aurelia-fetch-client\";\r\nimport { WebsiteCoinValue } from \"app/api/websites/websiteCoinValue\";\r\nimport * as fetchJsonp from \"fetch-jsonp\";\r\n\r\n@inject(HttpClient)\r\nexport class CoinBaseApi {\r\n    constructor(private http: HttpClient) { //TODO use npm package\r\n\r\n    }\r\n\r\n    public root = \"https://api.coinbase.com/v2/exchange-rates?currency=\";\r\n\r\n    private async getPrice(coin: string)\r\n    {\r\n        let response = await this.http.fetch(this.root + coin);\r\n        var json = await response.json();\r\n        debugger;\r\n        return new WebsiteCoinValue(\"Coinbase\", coin , json.data.rates[\"EUR\"] )\r\n    }\r\n    \r\n    public async getBitcoinPrice() {\r\n        return await this.getPrice(\"BTC\")        \r\n    }\r\n\r\n    public async getEthereumPrice() {\r\n        return await this.getPrice(\"ETH\")\r\n    }\r\n\r\n    public async getLiteCoinPrice() {\r\n        return await this.getPrice(\"LTC\")\r\n    }\r\n\r\n\r\n\r\n}\r\n",null],"sourceRoot":".."}